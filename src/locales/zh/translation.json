{
  "app": {
    "title": "JSON工具集 - 全面的JSON实用工具",
    "description": "为开发者和数据专业人员提供的全面JSON工具集。格式化、验证、比较、转换、查询和可视化JSON数据的强大在线工具。",
    "header": "全能JSON工具套件",
    "backToHome": "进入工具集"
  },
  "theme": {
    "toggleLight": "切换到浅色模式",
    "toggleDark": "切换到深色模式",
    "toggle": "切换主题"
  },
  "language": {
    "toggle": "切换语言",
    "english": "English",
    "chinese": "中文"
  },
  "tabs": {
    "format": "格式化",
    "compare": "比较",
    "convert": "转换",
    "visualize": "可视化",
    "validate": "验证",
    "query": "查询",
    "codeGenerator": "代码生成",
    "apiMocker": "接口模拟",
    "jwtDecoder": "JWT解码器",
    "faq": "常见问题"
  },
  "format": {
    "title": "JSON格式化与美化工具",
    "description": "使用这个易用的工具格式化和美化您的JSON数据。通过可自定义的缩进提高可读性，验证JSON语法，并快速压缩以供生产使用。从文件上传或直接粘贴，然后下载或复制格式化结果。",
    "keywords": [
      "JSON格式化",
      "JSON美化",
      "JSON验证器",
      "JSON压缩器",
      "缩进JSON",
      "格式化JSON",
      "可读性JSON",
      "JSON语法"
    ],
    "indent": "缩进",
    "spaces": "{{count}}个空格",
    "format": "格式化",
    "minify": "压缩",
    "download": "下载",
    "upload": "上传",
    "enterJson": "输入JSON...",
    "paste": "粘贴",
    "copy": "复制",
    "feature1": "智能JSON格式化",
    "feature1.description": "自动检测并格式化JSON，支持可配置的缩进",
    "feature2": "压缩选项",
    "feature2.description": "压缩JSON以减小生产环境下的文件大小",
    "feature3": "语法高亮",
    "feature3.description": "彩色编码输出使JSON结构更易于阅读",
    "feature4": "错误检测",
    "feature4.description": "识别并突出显示JSON中的语法错误，并提供有用的错误信息",
    "shortDescription": "格式化、美化和验证您的JSON数据，支持可配置选项"
  },
  "compare": {
    "title": "JSON差异比较工具",
    "description": "比较两个JSON对象并可视化差异。非常适合API测试、调试响应变化和跟踪JSON数据结构中的更改。此工具提供JSON对象之间添加、删除和修改的详细列表。",
    "keywords": [
      "JSON差异",
      "JSON比较",
      "JSON对比",
      "API测试",
      "对象比较",
      "数据比较",
      "JSON变化",
      "JSON增量"
    ],
    "firstJson": "输入第一个JSON...",
    "secondJson": "输入第二个JSON...",
    "compare": "比较",
    "result": "比较结果已复制到剪贴板！",
    "feature1": "并排比较",
    "feature1.description": "并排查看两个JSON对象，并清晰突出显示差异",
    "feature2": "差异检测",
    "feature2.description": "自动识别添加、删除和更改的值",
    "feature3": "嵌套对象支持",
    "feature3.description": "精确跟踪复杂嵌套结构的差异",
    "shortDescription": "比较两个JSON对象并可视化它们之间的差异"
  },
  "convert": {
    "title": "JSON转换器 - XML、CSV、YAML转换工具",
    "description": "在JSON数据与YAML、XML和CSV等不同格式之间相互转换。这个多功能工具提供了可自定义的缩进、标题和数据格式选项，以满足您的特定转换需求。非常适合数据迁移、API集成和格式转换。",
    "keywords": [
      "JSON转YAML",
      "JSON转XML",
      "JSON转CSV",
      "YAML转JSON",
      "格式转换",
      "数据转换",
      "API集成",
      "数据导出"
    ],
    "jsonToYaml": "JSON → YAML",
    "yamlToJson": "YAML → JSON",
    "jsonToXml": "JSON → XML",
    "jsonToCsv": "JSON → CSV",
    "options": "转换选项",
    "prettyPrint": "美化输出",
    "xmlHeader": "XML头",
    "includeHeader": "包含标题",
    "flattenObjects": "扁平化对象",
    "delimiter": "分隔符",
    "enterJson": "输入JSON...",
    "enterYaml": "输入YAML...",
    "convert": "转换",
    "result": "转换结果已复制到剪贴板！",
    "feature1": "多种格式支持",
    "feature1.description": "在JSON、YAML、XML、CSV和其他格式之间转换",
    "feature2": "双向转换",
    "feature2.description": "一键从JSON转换到其他格式，也可从其他格式转换到JSON",
    "feature3": "可自定义输出",
    "feature3.description": "配置转换选项以匹配您的需求",
    "feature4": "即时预览",
    "feature4.description": "在您输入时实时查看转换结果",
    "shortDescription": "在JSON和其他格式（包括YAML、XML和CSV）之间进行转换"
  },
  "visualize": {
    "title": "JSON可视化工具",
    "description": "使用交互式图表可视化您的JSON数据。将复杂数据结构转变为有洞察力的视觉表示。支持条形图、折线图、饼图等 - 完美适合数据分析和演示。",
    "keywords": [
      "JSON可视化",
      "数据可视化",
      "JSON图表",
      "数据图表",
      "JSON图形",
      "数据展示",
      "API可视化",
      "JSON数据分析"
    ],
    "jsonData": "JSON数据",
    "enterJson": "在这里输入JSON数据...",
    "loadExample": "加载示例",
    "examples": "示例数据：",
    "exampleData": {
      "example1": "示例1 - 简单数据",
      "example2": "示例2 - 多系列数据",
      "example3": "示例3 - 嵌套数据"
    },
    "visualize": "生成图表",
    "chartUpdated": "图表已更新",
    "chartOptions": "图表配置",
    "chartType": "图表类型",
    "barChart": "条形图",
    "lineChart": "折线图",
    "pieChart": "饼图",
    "donutChart": "环形图",
    "areaChart": "面积图",
    "stackedBarChart": "堆叠条形图",
    "scatterChart": "散点图",
    "radarChart": "雷达图",
    "treemapChart": "树形图",
    "xAxisField": "X轴字段",
    "yAxisField": "Y轴字段",
    "colorField": "颜色字段",
    "category": "类别",
    "numeric": "数值",
    "enableMultiSeries": "启用多系列",
    "multiSeriesEnabled": "多系列已启用",
    "selectDataSeries": "选择数据系列",
    "selectFields": "请选择X和Y字段",
    "selectSeries": "请至少选择一个数据系列",
    "noDataPoints": "没有有效的数据点可视化",
    "chart": "图表结果",
    "feature1": "交互式树形视图",
    "feature1.description": "通过可展开的树形结构探索JSON层次结构",
    "feature2": "图表可视化",
    "feature2.description": "通过交互式图表可视化JSON元素之间的关系",
    "feature3": "复制路径功能",
    "feature3.description": "轻松获取复杂JSON结构中任何元素的路径",
    "shortDescription": "将JSON数据可视化为交互式树形图、图表和图形"
  },
  "validate": {
    "title": "JSON Schema验证器",
    "description": "根据JSON Schema验证您的JSON数据，以确保数据完整性和结构。此工具帮助开发人员验证JSON负载是否符合预定义的模式，在集成或API使用之前捕获错误并确保数据质量。",
    "keywords": [
      "JSON验证", 
      "Schema验证", 
      "API测试", 
      "数据验证", 
      "JSON Schema",
      "JSON格式",
      "数据完整性"
    ],
    "jsonData": "JSON数据",
    "jsonSchema": "JSON Schema",
    "dataExamples": "数据示例",
    "schemaTemplates": "Schema模板",
    "selectExample": "选择一个示例",
    "selectTemplate": "选择一个模板",
    "enterJsonData": "输入JSON数据...",
    "enterJsonSchema": "输入JSON Schema...",
    "validate": "验证",
    "validResult": "验证通过",
    "invalidResult": "验证失败",
    "errorsFound": "发现{{count}}个错误",
    "atPath": "路径：",
    "errorDetails": "错误详情",
    "errorType": "错误类型",
    "path": "路径",
    "message": "消息",
    "receivedValue": "接收的值",
    "expectedSchema": "预期的Schema",
    "enterBoth": "请同时输入JSON数据和Schema",
    "jsonValid": "JSON根据Schema验证通过！",
    "jsonInvalid": "JSON根据Schema验证失败",
    "invalidValue": "无效值",
    "invalidFormat": "无效的JSON或Schema格式",
    "templateDataLoaded": "已加载Schema模板和匹配的示例数据: {{name}}",
    "templateLoaded": "已加载Schema模板",
    "dataTemplateLoaded": "已加载示例数据和匹配的Schema模板: {{name}}",
    "dataLoaded": "已加载示例数据",
    "validationResult": "验证结果",
    "learnJsonSchema": "了解JSON Schema",
    "schemaDescription": "JSON Schema是一种声明式语言，用于验证JSON数据。您可以定义格式、必需字段和数据类型，然后验证JSON数据是否符合这些规则。",
    "documentation": "文档",
    "tutorial": "教程",
    "templateExamples": {
      "genericObject": "通用对象",
      "userList": "用户列表",
      "configObject": "配置对象"
    },
    "feature1": "JSON Schema验证",
    "feature1.description": "根据JSON Schema（draft-07）验证JSON数据",
    "feature2": "详细错误报告",
    "feature2.description": "获取有关验证失败的精确信息",
    "feature3": "Schema构建器",
    "feature3.description": "通过交互式界面创建和编辑JSON schema",
    "shortDescription": "根据JSON Schema验证JSON数据，提供详细的错误报告"
  },
  "query": {
    "title": "JSONPath查询工具 - 从JSON中提取数据",
    "description": "使用JSONPath表达式查询和提取复杂JSON结构中的特定数据。这个强大的工具允许您使用精确的路径语法导航和过滤JSON数据，非常适合API响应分析、数据提取和JSON处理工作流。",
    "keywords": [
      "JSONPath",
      "JSON查询",
      "JSON提取",
      "JSON过滤",
      "JSON导航器",
      "API响应解析器",
      "JSON数据选择",
      "路径表达式"
    ],
    "guide": {
      "title": "JSONPath快速指南",
      "showGuide": "显示指南",
      "hideGuide": "隐藏指南",
      "loadExample": "加载测试数据",
      "try": "点击下面的任何示例进行尝试",
      "dataStructure": "示例数据结构：",
      "syntax": "JSONPath语法参考：",
      "root": "表示根对象",
      "child": "表示子元素，例如，$.store.book访问store下的book属性",
      "array": "访问数组的第n个元素，例如，$.store.book[0]访问第一本书",
      "allItems": "表示数组中的所有元素，例如，$.store.book[*].title返回所有书名",
      "filter": "根据条件过滤元素，例如，$.store.book[?(@.price<10)]返回价格小于10的书",
      "returnRoot": "返回整个JSON对象",
      "returnStore": "返回store对象及其所有内容",
      "returnAllBooks": "返回books数组中的所有对象",
      "returnFirstBook": "返回关于第一本书的所有信息",
      "returnAllTitles": "返回所有书名，例如，[\"哈利波特\",...]",
      "returnInStock": "返回所有库存为true的书"
    },
    "examples": "试试这些例子",
    "example1": "获取整个数据",
    "example2": "获取商店对象",
    "example3": "获取所有图书",
    "example4": "获取第一本书",
    "example5": "获取第二本书",
    "example6": "获取第一本书标题",
    "example7": "获取所有书标题",
    "example8": "获取所有作者",
    "example9": "获取有库存的书",
    "example10": "获取价格超过$10的书",
    "example11": "获取价格低于$10的书",
    "example12": "获取自行车详情",
    "example13": "获取商店位置",
    "jsonData": "JSON数据",
    "jsonPath": "JSONPath查询",
    "executeQuery": "执行查询",
    "results": "查询结果",
    "type": "类型",
    "recentQueries": "最近查询",
    "noResults": "未找到结果",
    "invalidQuery": "无效的JSON或查询格式",
    "feature1": "JSONPath支持",
    "feature1.description": "使用强大的JSONPath语法查询JSON",
    "feature2": "实时结果",
    "feature2.description": "输入时即时查看查询结果更新",
    "feature3": "查询示例",
    "feature3.description": "从预构建的示例查询中学习常见任务",
    "shortDescription": "使用JSONPath查询从JSON中提取特定数据"
  },
  "codeGenerator": {
    "title": "JSON转代码生成器",
    "description": "从JSON数据生成编程语言代码。立即将JSON转换为TypeScript、Java、C#、Python、Go或Swift中的类、接口或模型。通过可自定义的属性名称、类型和注解选项，节省数据模型创建时间。",
    "keywords": [
      "JSON转代码",
      "代码生成器",
      "TypeScript接口",
      "Java类",
      "C#模型",
      "Python类",
      "Swift结构",
      "Go结构",
      "数据模型",
      "JSON反序列化"
    ],
    "targetLanguage": "目标语言",
    "rootClassName": "根类名称",
    "generate": "生成代码",
    "upload": "上传JSON",
    "options": "代码生成选项",
    "useInterfaces": "使用接口",
    "useClasses": "使用类",
    "optionalProps": "可选属性",
    "requiredProps": "必需属性",
    "useJsonAnnotations": "使用JSON注解",
    "noJsonAnnotations": "不使用JSON注解",
    "jsonInput": "JSON输入",
    "generatedCode": "生成的代码",
    "noCodeGenerated": "尚未生成代码。输入JSON数据并点击生成。",
    "feature1": "多语言支持",
    "feature1.description": "为JavaScript、TypeScript、Python、Java、C#等语言生成代码",
    "feature2": "类型定义",
    "feature2.description": "根据您的JSON结构自动生成类型定义",
    "feature3": "可自定义输出",
    "feature3.description": "配置命名约定和代码风格选项",
    "shortDescription": "从JSON数据生成多种语言的代码类和类型"
  },
  "apiMocker": {
    "title": "API模拟工具 - 创建模拟API响应",
    "description": "基于JSON Schema创建模拟API响应。定义响应延迟、错误率和其他参数以模拟真实世界的API行为。非常适合前端开发人员使用尚未完成或可用的API。",
    "keywords": [
      "API模拟",
      "模拟服务器",
      "API测试",
      "前端开发",
      "JSON Schema",
      "API模拟",
      "假API",
      "后端模拟"
    ],
    "labels": {
      "endpoints": "API端点",
      "selectEndpoint": "选择端点",
      "createEndpoint": "创建新端点",
      "editEndpoint": "编辑端点",
      "endpointName": "端点名称",
      "jsonSchema": "JSON Schema",
      "mockResult": "模拟API响应",
      "responseSettings": "响应设置",
      "delay": "响应延迟",
      "errorRate": "错误率",
      "successStatus": "成功状态码",
      "errorStatus": "错误状态码",
      "enabled": "已启用",
      "disabled": "已禁用",
      "mockServer": "模拟服务器",
      "serverPort": "服务器端口",
      "headers": "响应头",
      "availableEndpoints": "可用端点",
      "schemaExamples": "Schema示例",
      "responsePreview": "响应预览",
      "statusCode": "状态码"
    },
    "buttons": {
      "saveEndpoint": "保存端点",
      "generateMock": "生成模拟响应",
      "copyMock": "复制响应",
      "newEndpoint": "新建端点",
      "startServer": "启动模拟服务器",
      "stopServer": "停止服务器"
    },
    "placeholders": {
      "enterSchema": "在此输入JSON Schema...",
      "enterEndpointName": "例如：users、products等"
    },
    "messages": {
      "endpointCreated": "端点创建成功",
      "endpointUpdated": "端点更新成功",
      "endpointDeleted": "端点已删除",
      "dataCopied": "模拟响应已复制到剪贴板",
      "serverStarted": "模拟服务器已在端口{{port}}上启动",
      "serverStopped": "模拟服务器已停止",
      "serverRunning": "服务器运行于 http://localhost:{{port}}",
      "noEndpoints": "尚未定义端点。使用下面的表单创建一个。",
      "noMockData": "尚未生成模拟数据。输入JSON Schema并点击生成。",
      "noEnabledEndpoints": "没有启用的端点。请至少启用一个端点。",
      "schemaExampleLoaded": "已加载{{name}}示例schema",
      "noPreviewData": "无法生成预览数据"
    },
    "errors": {
      "nameRequired": "端点名称是必需的",
      "invalidSchema": "无效的JSON Schema格式",
      "saveFailed": "保存端点失败",
      "generationFailed": "生成模拟数据失败",
      "noDataToCopy": "没有模拟数据可复制",
      "invalidPastedSchema": "粘贴内容中的JSON格式无效",
      "serverStartFailed": "启动模拟服务器失败",
      "loadExampleFailed": "加载示例失败"
    },
    "examples": {
      "user": "用户资料",
      "product": "产品目录",
      "order": "订单详情",
      "weather": "天气预报"
    },
    "feature1": "模拟API端点",
    "feature1.description": "创建带有自定义JSON响应的模拟API端点",
    "feature2": "响应模板",
    "feature2.description": "使用模板生成动态模拟数据",
    "feature3": "请求验证",
    "feature3.description": "根据预期格式验证传入的请求",
    "shortDescription": "创建带有自定义JSON响应的模拟API端点，用于测试"
  },
  "jwtDecoder": {
    "title": "JWT解码与验证工具",
    "description": "使用我们的在线JWT解码器解码、分析和验证JSON Web Tokens (JWT)。分解令牌以检查头部和有效载荷声明，验证签名，并检查令牌过期状态 - 使JWT调试和验证变得简单安全。",
    "keywords": [
      "JWT解码器",
      "JWT解析器",
      "JWT验证器",
      "JSON Web Token",
      "令牌验证",
      "JWT调试器",
      "令牌过期",
      "JWT声明",
      "JWT签名",
      "授权令牌"
    ],
    "inputLabel": "JWT令牌输入",
    "tokenInputLabel": "输入JWT令牌",
    "tokenPlaceholder": "在此粘贴您的JWT令牌...",
    "paste": "从剪贴板粘贴",
    "clear": "清除",
    "decodedToken": "已解码令牌",
    "headerTab": "头部",
    "payloadTab": "有效载荷",
    "signatureTab": "签名",
    "copyTooltip": "复制到剪贴板",
    "headerDescription": "头部通常包含令牌类型和使用的签名算法。",
    "payloadDescription": "有效载荷包含声明。声明是关于实体和附加数据的陈述。将鼠标悬停在时间戳字段(exp、iat等)上可查看实际日期和时间。",
    "signatureDescription": "签名用于验证消息在传输过程中未被更改，对于使用私钥签名的令牌，它还可以验证JWT的发送者身份。",
    "aboutJwt": "关于JWT",
    "jwtDefinition": "JSON Web Token (JWT) 是一种紧凑、URL安全的方式，用于在两方之间传输声明。JWT在Web应用程序中常用于身份验证和信息交换。",
    "jwtStructure": "JWT由三部分组成，用点分隔：头部、有效载荷和签名。头部和有效载荷是Base64Url编码的JSON对象，而签名是使用编码后的头部、有效载荷和密钥创建的。",
    "jwtUsage": "JWT常用于授权流程中，以安全地在各方之间传输信息。它们可以用作OAuth和OpenID Connect协议中的访问令牌、ID令牌和刷新令牌。",
    "errorTitle": "错误",
    "errors": {
      "invalidToken": "无效的JWT令牌格式",
      "noToken": "未提供令牌",
      "noSecret": "验证需要密钥",
      "invalidJson": "自定义声明中的JSON无效"
    },
    "showVerification": "显示验证选项",
    "verificationSection": "验证令牌签名",
    "verificationHelp": "您需要知道用于签名令牌的密钥才能验证它。",
    "secretInputLabel": "密钥",
    "secretPlaceholder": "输入用于签名JWT的密钥",
    "verifyButton": "验证签名",
    "signatureValid": "签名有效！令牌未被篡改。",
    "signatureInvalid": "签名无效！令牌可能已被篡改或使用了错误的密钥。",
    "expired": "已过期",
    "valid": "有效",
    "expiresIn": "过期时间",
    "issuer": "发行者",
    "subject": "主题",
    "audience": "受众",
    "seconds": "秒",
    "minutes": "分钟",
    "hours": "小时",
    "days": "天",
    "messages": {
      "copied": "{{type}}已复制到剪贴板",
      "verificationSuccess": "令牌签名有效",
      "verificationFailed": "令牌签名无效",
      "tokenCopied": "令牌已复制到剪贴板",
      "tokenSelected": "已选择测试令牌",
      "tokenGenerated": "已生成新的JWT令牌",
      "expiredTokenGenerated": "已生成过期的JWT令牌",
      "neverExpiringTokenGenerated": "已生成永不过期的JWT令牌"
    },
    "showTestData": "显示测试数据生成器",
    "hideTestData": "隐藏测试数据生成器",
    "testDataGenerator": "JWT测试数据生成器",
    "testDataDescription": "生成用于测试的示例JWT令牌。您可以创建具有不同过期时间、算法和声明的令牌。",
    "configureToken": "配置令牌",
    "secretKey": "密钥",
    "secretHelp": "用于签名令牌的密钥",
    "algorithm": "算法",
    "algorithmHelp": "JWT的签名算法",
    "expiresIn": "过期时间（秒）",
    "expiresInHelp": "令牌过期前的时间（秒）（留空表示永不过期）",
    "issuerHelp": "令牌的发行实体",
    "subjectHelp": "令牌的主题（通常是用户ID）",
    "audienceHelp": "令牌的目标接收者",
    "customClaims": "自定义声明（JSON）",
    "customClaimsHelp": "JSON格式的附加声明",
    "generateToken": "生成令牌",
    "generateExpired": "生成已过期令牌",
    "generateNeverExpiring": "生成永不过期令牌",
    "generateExpiredDirect": "立即生成已过期令牌",
    "generateNeverExpiringDirect": "立即生成永不过期令牌",
    "generatedTokens": "已生成的令牌",
    "useToken": "使用此令牌",
    "copyToClipboard": "复制到剪贴板",
    "testingTips": "测试提示",
    "tip1": "要模拟已过期的令牌，可以使用\"生成已过期令牌\"按钮或设置负数的过期时间。",
    "tip2": "要测试签名验证，请在生成器和验证器中使用相同的密钥。",
    "tip3": "要测试不同场景，可以修改自定义声明以包含角色、权限或其他应用程序特定数据。",
    "showHistory": "显示令牌历史",
    "hideHistory": "隐藏令牌历史",
    "standardToken": "标准令牌",
    "expiredToken": "已过期令牌",
    "neverExpiringToken": "永不过期令牌",
    "feature1": "简单令牌解码",
    "feature1.description": "即时解析JWT的头部、有效载荷和签名部分",
    "feature2": "签名验证",
    "feature2.description": "使用密钥验证令牌签名是否有效和未被篡改",
    "feature3": "时间戳可视化",
    "feature3.description": "自动将令牌中的时间戳转换为可读格式并显示过期状态"
  },
  "faq": {
    "title": "JSON工具 - 常见问题解答",
    "description": "查找有关JSON和我们工具的常见问题答案。本FAQ页面提供详细指南、故障排除提示和最佳实践，帮助您更有效地使用JSON数据和我们的工具套件。",
    "keywords": [
      "JSON常见问题",
      "JSON问题",
      "JSON帮助",
      "JSON教程",
      "JSON指南",
      "JSON工具使用",
      "JSON故障排除",
      "JSON使用技巧"
    ],
    "searchPlaceholder": "搜索FAQ...",
    "searchResults": "找到{{count}}个结果",
    "quickLinks": "快速链接",
    "additionalResources": "其他资源",
    "resourcesDescription": "以下资源提供了有关JSON和相关技术的更深入信息：",
    "jsonSpecification": "JSON规范",
    "jsonSchemaDoc": "JSON Schema文档",
    "jsonPathDoc": "JSONPath语法指南",
    "questions": {
      "format1": "如何格式化JSON以提高可读性？",
      "format2": "如何压缩JSON以减小文件大小？",
      "format3": "如何保存或分享格式化的JSON？",
      
      "compare1": "如何比较两个JSON对象之间的差异？",
      "compare2": "比较结果中的颜色代码表示什么？",
      
      "convert1": "如何将JSON转换为CSV格式？",
      "convert2": "如何将JSON转换为XML格式？",
      "convert3": "如何在YAML和JSON之间转换？",
      
      "validate1": "什么是JSON Schema验证？",
      "validate2": "遇到验证错误时应该怎么做？",
      
      "query1": "如何使用JSONPath查询JSON数据？",
      "query2": "如何创建复杂的JSONPath查询？",
      
      "code1": "如何从JSON生成代码类或接口？",
      "code2": "如何处理属性命名约定？",
      
      "mock1": "API模拟器是如何工作的？",
      "mock2": "如何创建自定义API模拟响应？",
      
      "visualize1": "如何将JSON数据可视化为图表？",
      
      "general1": "JSON工具安全吗？我的数据会发送到服务器吗？",
      "general2": "工具能处理多大的JSON文件？",
      
      "jwt1": "什么是JWT以及它的工作原理？",
      "jwt2": "JWT的三部分结构包含什么？",
      "jwt3": "如何验证JWT签名？",
      "jwt4": "什么情况下应使用JWT？"
    },
    
    "answers": {
      "format1": "使用我们的格式化工具，您可以轻松提高JSON可读性。只需将JSON粘贴到输入框中并点击\"格式化\"按钮。您还可以调整缩进空格数量来自定义格式。格式化过程会添加适当的间距、换行和缩进，使嵌套结构清晰可见。",
      "format2": "要压缩JSON（也称为最小化），请将您的JSON粘贴到格式化工具中并点击\"压缩\"按钮。这将删除所有不必要的空格、换行和缩进，显著减小文件大小，适用于生产环境或网络传输。",
      "format3": "格式化或压缩后，您可以点击\"复制\"按钮将结果复制到剪贴板，或点击\"下载\"按钮将其保存为文件。要分享，您可以复制并通过电子邮件或消息发送，或上传到代码分享平台，如GitHub Gist或Pastebin。",
      
      "compare1": "比较工具使查找两个JSON对象之间的差异变得容易。将第一个JSON粘贴到左侧输入框中，将第二个JSON粘贴到右侧输入框中，然后点击\"比较\"按钮。该工具将突出显示添加、删除或修改的部分，并以清晰的可视格式显示差异。",
      "compare2": "在比较结果中，绿色表示添加的内容，红色表示删除的内容，黄色表示修改的内容。每个变更还伴有特定的变更类型图标，帮助您快速识别差异类型。",
      
      "convert1": "将JSON转换为CSV格式：1）在转换工具中选择\"JSON→CSV\"选项；2）粘贴您的JSON数据；3）配置选项，如是否包含标题、分隔符类型等；4）点击\"转换\"按钮。请注意，JSON应为数组形式，每个数组项将转换为CSV中的一行。",
      "convert2": "将JSON转换为XML：1）在转换工具中选择\"JSON→XML\"选项；2）粘贴您的JSON数据；3）选择是否包含XML头；4）点击\"转换\"按钮。转换后，JSON对象属性成为XML标签，值成为标签内容或属性。",
      "convert3": "在YAML和JSON之间转换很简单：1）选择适当的转换方向（\"JSON→YAML\"或\"YAML→JSON\"）；2）粘贴您的源数据；3）点击\"转换\"按钮。YAML比JSON更易读，尤其是对于复杂的配置文件，而JSON在程序间数据交换中更常用。",
      
      "validate1": "JSON Schema验证是确保JSON数据符合预定义结构和规则的方法。您可以定义属性类型、必需字段、值范围和其他约束，验证器将检查您的JSON是否满足这些规则。这对API接口、配置文件或任何需要保证数据一致性的场景都很有用。",
      "validate2": "遇到验证错误时：1）仔细阅读错误消息，它指示问题所在；2）检查指定路径的数据类型是否正确；3）确保提供了所有必需字段；4）验证值是否在允许的范围内；5）检查特殊格式如日期或电子邮件是否正确格式化。您还可以使用我们内置的Schema模板来学习正确的Schema结构。",
      
      "query1": "JSONPath是类似于XML的XPath的查询语言。基本用法：1）`$`表示根对象；2）`.property`访问属性；3）`[index]`访问数组元素；4）`[*]`表示所有数组元素；5）`..property`在任何级别查找属性；6）`[?(@.property==value)]`基于条件过滤。例如，`$.store.book[*].title`将返回所有书籍标题。",
      "query2": "创建复杂查询：1）使用过滤器如`$.store.book[?(@.price<10)]`查找价格小于10的书籍；2）组合多个条件如`$.store.book[?(@.price<10 && @.category=='fiction')]`；3）使用`..`进行递归搜索如`$..author`查找所有作者；4）使用通配符如`$.store.book[*].[title,author]`同时获取标题和作者。",
      
      "code1": "使用代码生成器将JSON转换为代码类/接口：1）粘贴您的JSON示例数据；2）选择目标语言（TypeScript、Java、C#等）；3）设置根类名称；4）配置选项如是否使用接口、属性是否可选等；5）点击\"生成代码\"。生成的代码可以直接在您的项目中使用，大大节省手动创建数据模型的时间。",
      "code2": "我们的代码生成器支持多种命名约定：1）驼峰命名（如userName）；2）帕斯卡命名（如UserName）；3）蛇形命名（如user_name）。您可以根据目标语言的约定选择适当的命名风格。一些语言如Java通常使用驼峰命名，而C#则偏好帕斯卡命名。",
      
      "mock1": "API模拟器允许您创建模拟API端点，无需真实的后端服务器。工作原理：1）定义端点名称和JSON Schema；2）设置响应参数如延迟、错误率等；3）启动模拟服务器；4）通过生成的URL访问模拟API。这对于前端开发人员在后端API尚未完成时开发和测试特别有用。",
      "mock2": "创建自定义API模拟响应：1）在Schema编辑器中定义数据结构；2）使用JSON Schema关键字如type、format、enum等控制生成数据的类型和范围；3）设置错误率以模拟偶尔出现的错误；4）配置响应延迟以模拟网络延迟；5）定义自定义响应头。您还可以使用我们提供的常见数据模板快速入门。",
      
      "visualize1": "将JSON数据可视化为图表：1）粘贴包含数值数据的JSON；2）选择图表类型（柱状图、折线图、饼图等）；3）映射数据字段到图表轴（指定哪些字段用于X轴、Y轴等）；4）如需要，启用多系列数据支持；5）点击\"生成图表\"。可视化对于分析数据趋势、比较值或展示统计信息特别有用。",
      
      "general1": "是的，我们的工具完全在您的浏览器中运行，您的数据永远不会发送到任何服务器。所有处理都在您的设备上进行，确保数据隐私和安全。大多数功能即使在离线模式下也能继续工作。这使得该工具适合处理敏感或机密数据。",
      "general2": "我们的工具可以处理的JSON文件大小主要受限于您的浏览器和设备内存。通常，几MB的文件可以轻松处理。对于较大的文件（超过10MB），您可能会遇到性能下降。如果您需要处理非常大的JSON文件，请考虑将它们拆分为较小的部分或使用专门的桌面工具。",
      
      "jwt1": "JWT（JSON Web Token）是一种开放标准（RFC 7519），用于在系统间安全地传递声明。它的工作原理是：服务器在用户认证成功后生成一个JWT并返回给客户端，客户端在后续请求中将此令牌发送到服务器，服务器验证令牌有效性来确认用户身份，无需再次查询数据库。JWT采用紧凑的格式，便于在HTTP头或URL参数中传输，特别适合于分布式系统和微服务架构。",
      
      "jwt2": "JWT由三部分组成，每部分用点（.）分隔：1）头部（Header）：包含令牌类型和使用的签名算法，如HMAC SHA256或RSA；2）有效载荷（Payload）：包含声明（claims），如用户ID、角色、过期时间等；3）签名（Signature）：使用头部指定的算法，结合密钥，对前两部分的编码数据进行签名。头部和有效载荷部分是Base64Url编码的JSON，而不是加密，因此任何人都可以解码查看内容。签名部分确保令牌在传输过程中未被篡改。",
      
      "jwt3": "验证JWT签名是确保令牌安全性的关键步骤，包括：1）分离JWT的三个部分（头部、有效载荷和签名）；2）使用与签发令牌时相同的密钥和算法，对头部和有效载荷重新计算签名；3）比较计算得到的签名与JWT中的签名部分是否匹配；4）检查令牌是否过期。使用我们的JWT解码器，您可以输入令牌和密钥来验证签名。此外，还应检查其他重要声明，如发行者（iss）、受众（aud）等，确保令牌用于正确的应用程序上下文。",
      
      "jwt4": "JWT最适合用于：1）身份认证：用户登录后，后续请求可以包含JWT，允许用户访问其权限范围内的路由、服务和资源；2）信息交换：JWT是在各方之间安全传输信息的良好方式，因为可以通过签名验证发送者身份，并确保内容未被篡改；3）无状态API：使服务器无需存储会话状态，提高可扩展性。然而，JWT并不适合所有场景，对于需要即时撤销权限的情况、存储大量数据或高安全要求场景时，应考虑其他机制或结合使用。最佳实践包括：使用HTTPS、设置合理的过期时间、不存储敏感信息在有效载荷中，以及谨慎处理密钥。"
    },
    "shortDescription": "查找有关JSON和我们工具的常见问题解答"
  },
  "categories": {
    "format": "格式化",
    "compare": "比较",
    "convert": "转换",
    "validate": "验证",
    "query": "查询",
    "code": "代码生成",
    "mock": "API模拟",
    "visualize": "可视化",
    "general": "常见问题",
    "jwt": "JWT令牌"
  },
  "footer": {
    "description": "为开发人员和数据专业人士提供全面的JSON实用工具。",
    "built": "使用React、TypeScript和Material-UI构建。",
    "copyright": "© {{year}} JSON工具。保留所有权利。",
    "tools": "工具",
    "resources": "资源",
    "documentation": "文档",
    "apiReference": "API参考",
    "connect": "联系开发者",
    "contactEmail": "联系邮箱: your.email@example.com",
    "sourceCode": "源代码",
    "reportBug": "报告Bug",
    "privacy": "本站所有工具仅在客户端运行。您的数据永远不会离开您的浏览器。",
    "privacyPolicy": "隐私政策",
    "termsOfUse": "使用条款"
  },
  "policy": {
    "privacyPolicy": {
      "title": "隐私政策",
      "dataProcessing": {
        "title": "数据处理",
        "content": "所有JSON数据处理完全在您的浏览器中进行，不会发送到任何服务器。我们不会收集、存储或处理您上传或输入的任何JSON数据。"
      },
      "cookies": {
        "title": "Cookie使用",
        "content": "本站仅使用必要的本地存储（localStorage）来记住您的设置偏好，例如深色/浅色主题选择和上次使用的工具选项卡。我们不使用任何追踪Cookie或第三方分析Cookie。"
      },
      "analytics": {
        "title": "分析工具",
        "content": "我们可能使用基本分析工具收集匿名使用数据，如访问量和页面浏览量，以帮助我们改进工具。这些数据不包含任何个人身份信息，且仅用于内部分析目的。"
      },
      "thirdParty": {
        "title": "第三方链接",
        "content": "本站可能包含指向第三方网站的链接，这些网站有自己的隐私政策和数据处理方法。我们对这些第三方网站的内容或隐私实践不负任何责任，建议您查看这些网站的隐私政策。"
      },
      "updates": {
        "title": "政策更新",
        "content": "本隐私政策可能不定期更新，请定期查看变更。我们会在页面上标注最后更新日期，但不会特别通知您每次更改。"
      },
      "contact": {
        "title": "联系方式",
        "content": "如有任何隐私相关问题，请通过以下邮箱联系我们：contact@jsontools.example.com"
      },
      "lastUpdated": "最后更新：{{date}}"
    },
    "termsOfUse": {
      "title": "使用条款",
      "license": {
        "title": "使用许可",
        "content": "我们授予您访问和使用本工具的非排他性许可。您可以出于个人或商业目的使用本工具处理JSON数据，但不得将本工具整体或部分进行再分发、转售或包装为其他产品。"
      },
      "disclaimer": {
        "title": "免责声明",
        "content": "本工具按\"原样\"提供，不提供任何形式的担保。我们不对因使用本工具而可能导致的任何数据丢失、损坏或其他损失负责。用户需自行承担使用本工具的风险，并对自己的数据负责。"
      },
      "intellectualProperty": {
        "title": "知识产权",
        "content": "除非另有说明，本工具的所有内容、代码、设计和图标均为JSON工具的知识产权。您不得复制、修改、分发或使用这些内容，除非本条款明确允许或获得我们的书面许可。"
      },
      "prohibitedActivities": {
        "title": "禁止行为",
        "content": "使用本工具时，您不得：",
        "items": [
          "尝试干扰或破坏网站的正常运行",
          "使用自动化工具对网站进行爬取或过度请求",
          "规避、禁用或干扰网站的安全相关功能",
          "使用本工具处理或存储违法内容",
          "过度占用服务器资源，导致其他用户体验下降"
        ]
      },
      "termination": {
        "title": "终止条款",
        "content": "我们保留在任何时候、因任何原因（包括但不限于违反这些使用条款）终止或限制您访问服务的权利，恕不另行通知。"
      },
      "governingLaw": {
        "title": "法律管辖",
        "content": "本条款受中国法律管辖，与本工具相关的任何争议应提交至中国有管辖权的法院解决。"
      },
      "changes": {
        "title": "条款变更",
        "content": "我们保留随时修改这些条款的权利。重大更改将在网站上通知。继续使用本工具将被视为接受修改后的条款。"
      },
      "lastUpdated": "最后更新：{{date}}"
    }
  },
  "common": {
    "copied": "{{content}}已复制到剪贴板！",
    "error": {
      "invalidJson": "无效的JSON格式",
      "emptyInput": "请输入一些{{content}}以{{action}}",
      "noData": "没有{{content}}可下载",
      "fileRead": "读取文件失败",
      "clipboard": "从剪贴板读取失败"
    },
    "close": "关闭"
  },
  "share": {
    "title": "分享JSON内容",
    "description": "创建包含当前JSON数据和工具设置的可分享链接。",
    "buttonTooltip": "分享此JSON",
    "buttonAriaLabel": "分享",
    "linkLabel": "分享链接",
    "copy": "复制",
    "copyLink": "复制链接",
    "includeCurrent": "包含当前内容",
    "includeJson": "包含JSON数据",
    "includeSettings": "包含工具设置",
    "generateError": "生成分享链接时出错",
    "linkCopied": "分享链接已复制到剪贴板",
    "copyError": "复制到剪贴板时出错",
    "socialShare": "分享到社交媒体",
    "socialText": "查看我使用JSON工具处理的数据",
    "emailSubject": "分享的JSON数据链接",
    "qrCodeInfo": "或者扫描以下二维码以在移动设备上访问"
  },
  "home": {
    "subtitle": "为开发者提供的全面JSON工具集",
    "description": "免费在线工具集，用于处理JSON数据。轻松格式化、验证、转换、比较、可视化和查询JSON。无需注册。",
    "openApp": "打开所有工具",
    "availableTools": "可用工具",
    "learnMore": "了解更多",
    "useTool": "使用工具",
    "viewFaq": "查看常见问题",
    "startNow": "准备开始？",
    "allToolsFree": "所有工具完全免费使用，无需注册，直接在浏览器中运行。",
    "openAllTools": "打开应用"
  },
  "landingPages": {
    "tryNow": "立即尝试",
    "allTools": "查看所有工具",
    "keyFeatures": "核心功能",
    "relatedTopics": "相关主题",
    "readyToStart": "准备开始使用此工具？",
    "noSignup": "无需注册，所有工具均免费且直接在浏览器中运行。",
    "startUsing": "开始使用{{tool}}",
    "backToHome": "返回主页",
    "openTool": "打开工具"
  }
} 