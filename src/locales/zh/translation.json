{
  "app": {
    "title": "JSON工具集 - 全面的JSON实用工具",
    "description": "为开发者和数据专业人员提供的全面JSON工具集。格式化、验证、比较、转换、查询和可视化JSON数据的强大在线工具。",
    "header": "全能JSON工具套件"
  },
  "theme": {
    "toggleLight": "切换到浅色模式",
    "toggleDark": "切换到深色模式",
    "toggle": "切换主题"
  },
  "language": {
    "toggle": "切换语言",
    "english": "English",
    "chinese": "中文"
  },
  "tabs": {
    "format": "格式化",
    "compare": "比较",
    "convert": "转换",
    "visualize": "可视化",
    "validate": "验证",
    "query": "查询",
    "codeGenerator": "代码生成",
    "apiMocker": "接口模拟"
  },
  "format": {
    "title": "JSON格式化与美化工具",
    "description": "使用这个易用的工具格式化和美化您的JSON数据。通过可自定义的缩进提高可读性，验证JSON语法，并快速压缩以供生产使用。从文件上传或直接粘贴，然后下载或复制格式化结果。",
    "keywords": [
      "JSON格式化",
      "JSON美化",
      "JSON验证器",
      "JSON压缩器",
      "缩进JSON",
      "格式化JSON",
      "可读性JSON",
      "JSON语法"
    ],
    "indent": "缩进",
    "spaces": "{{count}}个空格",
    "format": "格式化",
    "minify": "压缩",
    "download": "下载",
    "upload": "上传",
    "enterJson": "输入JSON...",
    "paste": "粘贴",
    "copy": "复制"
  },
  "compare": {
    "title": "JSON差异比较工具",
    "description": "比较两个JSON对象并可视化差异。非常适合API测试、调试响应变化和跟踪JSON数据结构中的更改。此工具提供JSON对象之间添加、删除和修改的详细列表。",
    "keywords": [
      "JSON差异",
      "JSON比较",
      "JSON差异",
      "API测试",
      "对象比较",
      "数据比较",
      "JSON变化",
      "JSON增量"
    ],
    "firstJson": "输入第一个JSON...",
    "secondJson": "输入第二个JSON...",
    "compare": "比较",
    "result": "比较结果已复制到剪贴板！"
  },
  "convert": {
    "title": "JSON转换器 - XML、CSV、YAML转换工具",
    "description": "在JSON数据与YAML、XML和CSV等不同格式之间相互转换。这个多功能工具提供了可自定义的缩进、标题和数据格式选项，以满足您的特定转换需求。非常适合数据迁移、API集成和格式转换。",
    "keywords": [
      "JSON转YAML",
      "JSON转XML",
      "JSON转CSV",
      "YAML转JSON",
      "格式转换",
      "数据转换",
      "API集成",
      "数据导出"
    ],
    "jsonToYaml": "JSON → YAML",
    "yamlToJson": "YAML → JSON",
    "jsonToXml": "JSON → XML",
    "jsonToCsv": "JSON → CSV",
    "options": "转换选项",
    "prettyPrint": "美化输出",
    "xmlHeader": "XML头",
    "includeHeader": "包含标题",
    "flattenObjects": "扁平化对象",
    "delimiter": "分隔符",
    "enterJson": "输入JSON...",
    "enterYaml": "输入YAML...",
    "convert": "转换",
    "result": "转换结果已复制到剪贴板！"
  },
  "visualize": {
    "title": "JSON可视化工具",
    "description": "使用交互式图表可视化您的JSON数据。将复杂数据结构转变为有洞察力的视觉表示。支持条形图、折线图、饼图等 - 完美适合数据分析和演示。",
    "keywords": [
      "JSON可视化",
      "数据可视化",
      "JSON图表",
      "数据图表",
      "JSON图形",
      "数据展示",
      "API可视化",
      "JSON数据分析"
    ],
    "jsonData": "JSON数据",
    "enterJson": "在这里输入JSON数据...",
    "loadExample": "加载示例",
    "examples": "示例数据：",
    "exampleData": {
      "example1": "示例1 - 简单数据",
      "example2": "示例2 - 多系列数据",
      "example3": "示例3 - 嵌套数据"
    },
    "visualize": "生成图表",
    "chartUpdated": "图表已更新",
    "chartOptions": "图表配置",
    "chartType": "图表类型",
    "barChart": "条形图",
    "lineChart": "折线图",
    "pieChart": "饼图",
    "donutChart": "环形图",
    "areaChart": "面积图",
    "stackedBarChart": "堆叠条形图",
    "scatterChart": "散点图",
    "radarChart": "雷达图",
    "treemapChart": "树形图",
    "xAxisField": "X轴字段",
    "yAxisField": "Y轴字段",
    "colorField": "颜色字段",
    "category": "类别",
    "numeric": "数值",
    "enableMultiSeries": "启用多系列",
    "multiSeriesEnabled": "多系列已启用",
    "selectDataSeries": "选择数据系列",
    "selectFields": "请选择X和Y字段",
    "selectSeries": "请至少选择一个数据系列",
    "noDataPoints": "没有有效的数据点可视化",
    "chart": "图表结果"
  },
  "validate": {
    "title": "JSON Schema验证器",
    "description": "根据JSON Schema验证您的JSON数据，以确保数据完整性和结构。此工具帮助开发人员验证JSON负载是否符合预定义的模式，在集成或API使用之前捕获错误并确保数据质量。",
    "keywords": [
      "JSON验证", 
      "Schema验证", 
      "API测试", 
      "数据验证", 
      "JSON Schema",
      "JSON格式",
      "数据完整性"
    ],
    "jsonData": "JSON数据",
    "jsonSchema": "JSON Schema",
    "dataExamples": "数据示例",
    "schemaTemplates": "Schema模板",
    "selectExample": "选择一个示例",
    "selectTemplate": "选择一个模板",
    "enterJsonData": "输入JSON数据...",
    "enterJsonSchema": "输入JSON Schema...",
    "validate": "验证",
    "validResult": "验证通过",
    "invalidResult": "验证失败",
    "errorsFound": "发现{{count}}个错误",
    "atPath": "路径：",
    "errorDetails": "错误详情",
    "errorType": "错误类型",
    "path": "路径",
    "message": "消息",
    "receivedValue": "接收的值",
    "expectedSchema": "预期的Schema",
    "enterBoth": "请同时输入JSON数据和Schema",
    "jsonValid": "JSON根据Schema验证通过！",
    "jsonInvalid": "JSON根据Schema验证失败",
    "invalidValue": "无效值",
    "invalidFormat": "无效的JSON或Schema格式",
    "templateDataLoaded": "已加载Schema模板和匹配的示例数据: {{name}}",
    "templateLoaded": "已加载Schema模板",
    "dataTemplateLoaded": "已加载示例数据和匹配的Schema模板: {{name}}",
    "dataLoaded": "已加载示例数据",
    "validationResult": "验证结果",
    "learnJsonSchema": "了解JSON Schema",
    "schemaDescription": "JSON Schema是一种声明式语言，用于验证JSON数据。您可以定义格式、必需字段和数据类型，然后验证JSON数据是否符合这些规则。",
    "documentation": "文档",
    "tutorial": "教程",
    "templateExamples": {
      "genericObject": "通用对象",
      "userList": "用户列表",
      "configObject": "配置对象"
    }
  },
  "query": {
    "title": "JSONPath查询工具 - 从JSON中提取数据",
    "description": "使用JSONPath表达式查询和提取复杂JSON结构中的特定数据。这个强大的工具允许您使用精确的路径语法导航和过滤JSON数据，非常适合API响应分析、数据提取和JSON处理工作流。",
    "keywords": [
      "JSONPath",
      "JSON查询",
      "JSON提取",
      "JSON过滤",
      "JSON导航器",
      "API响应解析器",
      "JSON数据选择",
      "路径表达式"
    ],
    "guide": {
      "title": "JSONPath快速指南",
      "showGuide": "显示指南",
      "hideGuide": "隐藏指南",
      "loadExample": "加载测试数据",
      "try": "点击下面的任何示例进行尝试",
      "dataStructure": "示例数据结构：",
      "syntax": "JSONPath语法参考：",
      "root": "表示根对象",
      "child": "表示子元素，例如，$.store.book访问store下的book属性",
      "array": "访问数组的第n个元素，例如，$.store.book[0]访问第一本书",
      "allItems": "表示数组中的所有元素，例如，$.store.book[*].title返回所有书名",
      "filter": "根据条件过滤元素，例如，$.store.book[?(@.price<10)]返回价格小于10的书",
      "returnRoot": "返回整个JSON对象",
      "returnStore": "返回store对象及其所有内容",
      "returnAllBooks": "返回books数组中的所有对象",
      "returnFirstBook": "返回关于第一本书的所有信息",
      "returnAllTitles": "返回所有书名，例如，[\"哈利波特\",...]",
      "returnInStock": "返回所有库存为true的书"
    },
    "examples": "试试这些例子",
    "example1": "获取整个数据",
    "example2": "获取商店对象",
    "example3": "获取所有图书",
    "example4": "获取第一本书",
    "example5": "获取第二本书",
    "example6": "获取第一本书标题",
    "example7": "获取所有书标题",
    "example8": "获取所有作者",
    "example9": "获取有库存的书",
    "example10": "获取价格超过$10的书",
    "example11": "获取价格低于$10的书",
    "example12": "获取自行车详情",
    "example13": "获取商店位置",
    "jsonData": "JSON数据",
    "jsonPath": "JSONPath查询",
    "executeQuery": "执行查询",
    "results": "查询结果",
    "type": "类型",
    "recentQueries": "最近查询",
    "noResults": "未找到结果",
    "invalidQuery": "无效的JSON或查询格式"
  },
  "codeGenerator": {
    "title": "JSON转代码生成器",
    "description": "从JSON数据生成编程语言代码。立即将JSON转换为TypeScript、Java、C#、Python、Go或Swift中的类、接口或模型。通过可自定义的属性名称、类型和注解选项，节省数据模型创建时间。",
    "keywords": [
      "JSON转代码",
      "代码生成器",
      "TypeScript接口",
      "Java类",
      "C#模型",
      "Python类",
      "Swift结构",
      "Go结构",
      "数据模型",
      "JSON反序列化"
    ],
    "targetLanguage": "目标语言",
    "rootClassName": "根类名称",
    "generate": "生成代码",
    "upload": "上传JSON",
    "options": "代码生成选项",
    "useInterfaces": "使用接口",
    "useClasses": "使用类",
    "optionalProps": "可选属性",
    "requiredProps": "必需属性",
    "useJsonAnnotations": "使用JSON注解",
    "noJsonAnnotations": "不使用JSON注解",
    "jsonInput": "JSON输入",
    "generatedCode": "生成的代码",
    "noCodeGenerated": "尚未生成代码。输入JSON数据并点击生成。"
  },
  "apiMocker": {
    "title": "接口模拟器 - 创建模拟API响应",
    "description": "基于JSON Schema创建模拟API响应。定义响应延迟、错误率和其他参数，以模拟真实世界的API行为。非常适合需要使用尚未完成或可用的API的前端开发人员。",
    "keywords": [
      "API模拟",
      "模拟服务器",
      "API测试",
      "前端开发",
      "JSON Schema",
      "API模拟",
      "假API",
      "后端模拟"
    ],
    "labels": {
      "endpoints": "API端点",
      "selectEndpoint": "选择端点",
      "createEndpoint": "创建新端点",
      "editEndpoint": "编辑端点",
      "endpointName": "端点名称",
      "jsonSchema": "JSON Schema",
      "mockResult": "模拟API响应",
      "responseSettings": "响应设置",
      "delay": "响应延迟",
      "errorRate": "错误率",
      "successStatus": "成功状态码",
      "errorStatus": "错误状态码",
      "enabled": "已启用",
      "disabled": "已禁用",
      "mockServer": "模拟服务器",
      "serverPort": "服务器端口",
      "headers": "响应头",
      "availableEndpoints": "可用端点",
      "schemaExamples": "Schema示例",
      "responsePreview": "响应预览",
      "statusCode": "状态码"
    },
    "buttons": {
      "saveEndpoint": "保存端点",
      "generateMock": "生成模拟响应",
      "copyMock": "复制响应",
      "newEndpoint": "新建端点",
      "startServer": "启动模拟服务器",
      "stopServer": "停止服务器"
    },
    "placeholders": {
      "enterSchema": "在此输入JSON Schema...",
      "enterEndpointName": "例如：users, products等"
    },
    "messages": {
      "endpointCreated": "端点创建成功",
      "endpointUpdated": "端点已更新",
      "endpointDeleted": "端点已删除",
      "dataCopied": "模拟响应已复制到剪贴板",
      "serverStarted": "模拟服务器已在端口{{port}}上启动",
      "serverStopped": "模拟服务器已停止",
      "serverRunning": "服务器运行于http://localhost:{{port}}",
      "noEndpoints": "尚未定义端点。使用下面的表单创建一个。",
      "noMockData": "尚未生成模拟数据。输入JSON Schema并点击生成。",
      "noEnabledEndpoints": "没有已启用的端点。请启用至少一个端点。",
      "schemaExampleLoaded": "已加载{{name}}示例Schema",
      "noPreviewData": "无法生成预览数据"
    },
    "errors": {
      "nameRequired": "端点名称是必需的",
      "invalidSchema": "无效的JSON Schema格式",
      "saveFailed": "保存端点失败",
      "generationFailed": "生成模拟数据失败",
      "noDataToCopy": "没有模拟数据可复制",
      "invalidPastedSchema": "粘贴内容中的JSON格式无效",
      "serverStartFailed": "启动模拟服务器失败",
      "loadExampleFailed": "加载示例失败"
    },
    "examples": {
      "user": "用户档案",
      "product": "产品目录",
      "order": "订单详情",
      "weather": "天气预报"
    }
  },
  "footer": {
    "description": "为开发者和数据专业人员提供的综合JSON工具套件。",
    "built": "使用React、TypeScript和Material-UI构建。",
    "copyright": "© {{year}} JSON工具。保留所有权利。",
    "tools": "工具",
    "resources": "资源",
    "documentation": "文档",
    "apiReference": "API参考",
    "connect": "与开发者连接",
    "contactEmail": "联系：your.email@example.com",
    "sourceCode": "源代码",
    "reportBug": "报告错误",
    "privacy": "本站所有工具仅在客户端运行。您的数据永远不会离开您的浏览器。",
    "privacyPolicy": "隐私政策",
    "termsOfUse": "使用条款"
  },
  "common": {
    "copied": "{{content}}已复制到剪贴板！",
    "error": {
      "invalidJson": "无效的JSON格式",
      "emptyInput": "请输入一些{{content}}来{{action}}",
      "noData": "没有{{content}}可下载",
      "fileRead": "读取文件失败",
      "clipboard": "从剪贴板读取失败"
    },
    "close": "关闭"
  }
} 